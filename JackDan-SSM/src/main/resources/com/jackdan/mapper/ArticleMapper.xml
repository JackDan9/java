<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jackdan.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.jackdan.domain.Article">
    <constructor>
      <idArg column="article_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="article_title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="article_summary" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="comment_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="readnum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tag" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classification" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="collector_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jackdan.domain.Article">
    <constructor>
      <idArg column="article_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="article_title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="article_summary" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="comment_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="readnum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tag" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classification" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="collector_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    article_id, article_title, article_summary, comment_num, article_date, author_id, 
    readnum, tag, type, classification, collector_id, state
  </sql>
  <sql id="Blob_Column_List">
    article_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jackdan.domain.Article">
    insert into article (article_id, article_title, article_summary, 
      comment_num, article_date, author_id, 
      readnum, tag, type, 
      classification, collector_id, state, 
      article_content)
    values (#{articleId,jdbcType=VARCHAR}, #{articleTitle,jdbcType=VARCHAR}, #{articleSummary,jdbcType=VARCHAR}, 
      #{commentNum,jdbcType=INTEGER}, #{articleDate,jdbcType=TIMESTAMP}, #{authorId,jdbcType=VARCHAR}, 
      #{readnum,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{classification,jdbcType=INTEGER}, #{collectorId,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jackdan.domain.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="articleSummary != null">
        article_summary,
      </if>
      <if test="commentNum != null">
        comment_num,
      </if>
      <if test="articleDate != null">
        article_date,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="readnum != null">
        readnum,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="classification != null">
        classification,
      </if>
      <if test="collectorId != null">
        collector_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleSummary != null">
        #{articleSummary,jdbcType=VARCHAR},
      </if>
      <if test="commentNum != null">
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="articleDate != null">
        #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="readnum != null">
        #{readnum,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="classification != null">
        #{classification,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        #{collectorId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jackdan.domain.Article">
    update article
    <set>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleSummary != null">
        article_summary = #{articleSummary,jdbcType=VARCHAR},
      </if>
      <if test="commentNum != null">
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="articleDate != null">
        article_date = #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="readnum != null">
        readnum = #{readnum,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="classification != null">
        classification = #{classification,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        collector_id = #{collectorId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jackdan.domain.Article">
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      article_summary = #{articleSummary,jdbcType=VARCHAR},
      comment_num = #{commentNum,jdbcType=INTEGER},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      author_id = #{authorId,jdbcType=VARCHAR},
      readnum = #{readnum,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      classification = #{classification,jdbcType=INTEGER},
      collector_id = #{collectorId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jackdan.domain.Article">
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      article_summary = #{articleSummary,jdbcType=VARCHAR},
      comment_num = #{commentNum,jdbcType=INTEGER},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      author_id = #{authorId,jdbcType=VARCHAR},
      readnum = #{readnum,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      classification = #{classification,jdbcType=INTEGER},
      collector_id = #{collectorId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
</mapper>