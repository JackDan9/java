<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jackdan.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.jackdan.domain.Comment">
    <constructor>
      <idArg column="comment_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="comment_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="comment_article" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reply_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="comment_content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="comment_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="floor" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, comment_user, comment_article, reply_user, comment_content, comment_date, 
    floor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comment
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jackdan.domain.Comment">
    insert into comment (comment_id, comment_user, comment_article, 
      reply_user, comment_content, comment_date, 
      floor)
    values (#{commentId,jdbcType=VARCHAR}, #{commentUser,jdbcType=VARCHAR}, #{commentArticle,jdbcType=VARCHAR}, 
      #{replyUser,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentDate,jdbcType=TIMESTAMP}, 
      #{floor,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jackdan.domain.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentUser != null">
        comment_user,
      </if>
      <if test="commentArticle != null">
        comment_article,
      </if>
      <if test="replyUser != null">
        reply_user,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
      <if test="floor != null">
        floor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="commentUser != null">
        #{commentUser,jdbcType=VARCHAR},
      </if>
      <if test="commentArticle != null">
        #{commentArticle,jdbcType=VARCHAR},
      </if>
      <if test="replyUser != null">
        #{replyUser,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jackdan.domain.Comment">
    update comment
    <set>
      <if test="commentUser != null">
        comment_user = #{commentUser,jdbcType=VARCHAR},
      </if>
      <if test="commentArticle != null">
        comment_article = #{commentArticle,jdbcType=VARCHAR},
      </if>
      <if test="replyUser != null">
        reply_user = #{replyUser,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jackdan.domain.Comment">
    update comment
    set comment_user = #{commentUser,jdbcType=VARCHAR},
      comment_article = #{commentArticle,jdbcType=VARCHAR},
      reply_user = #{replyUser,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      floor = #{floor,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </update>
</mapper>