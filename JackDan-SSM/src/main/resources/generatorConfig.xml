<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 配置mysql 驱动jar包路径.用了绝对路径 -->
    <classPathEntry location="C:/Users/JackDan9/.m2/repository/mysql/mysql-connector-java/5.1.8/mysql-connector-java-5.1.8.jar" />

    <context id="jackdan_mysql_tables" targetRuntime="MyBatis3">
        <!-- 防止生成的代码中有很多注释， 加入下面的配置控制 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true" />
            <property name="suppressDate" value="true" />
        </commentGenerator>
        <!-- 数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/ssm"
                        userId="root"
                        password="admin1234">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--
            Model 模型生成器, 用来生成含有主键key的类, 记录类以及查询Example
            targetPackage 指定生成的model生成所在的包名
            targetProject 指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="com.jackdan.domain" targetProject="src/main/java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true" />

            <!-- 是否允许子包, 即targetPackage.schemaName.tableName -->
            <property name="enableSubPackage" value="true" />

            <!-- 建立的Model对象是否 不可改变 即生成的Model对象不会有 setter方法, 只有构造方法
            <property name="immutable" value="true" />
            -->

            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimString" value="true" />

            <!-- 给Model添加一个父类
            <property name="rootClass" value="com.foo.louis.Hello" />
            -->
        </javaModelGenerator>

        <!-- sql mapper 映射配置文件 -->
        <sqlMapGenerator targetPackage="com.jackdan.mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--
            客户端代码, 生成易于使用的针对Model对象和XML配置文件的代码
                type="ANNOTATEDMAPPER", 生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER", 生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER", 生成SQLMap XML文件和独立的Mapper接口
        -->

        <javaClientGenerator type="XMLMAPPER" targetPackage="com.jackdan.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
            <!--
                定义Mapper.java 源代码中的ByExample() 方法的可观性, 可选的值有:
                public;
                private;
                protected;
                default;
                注意: 如果 targetRuntime="MyBatis3", 此参数被忽略\
                <property name="exampleMethodVisibility" value="" />
            -->

            <!--
                方法名计数器
                Important note: this property is ignored if the target runtime is MyBatis3.
                <property name="methodNameCalculator" value="" />
            -->

            <!--
               为生成的接口添加父接口
               <property name="rootInterface" value="" />
            -->
        </javaClientGenerator>

        <!-- 数据表进行生成操作 schema: 相当于库名; tableName: 表名; domainObjectName: 对应的DO -->

        <table schema="ssm" tableName="article" domainObjectName="Article"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
        <table schema="ssm" tableName="user" domainObjectName="User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
        <table schema="ssm" tableName="comment" domainObjectName="Comment"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
    </context>
</generatorConfiguration>